package pactTesting;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThat;
import static org.junit.Assert.assertTrue;

import java.util.HashMap;
import java.util.Map;

import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

import au.com.dius.pact.consumer.Pact;
import au.com.dius.pact.consumer.PactProviderRuleMk2;
import au.com.dius.pact.consumer.PactVerification;
import au.com.dius.pact.consumer.dsl.PactDslWithProvider;
import au.com.dius.pact.model.RequestResponsePact;

public class TestProvider {

	@Rule
    public PactProviderRuleMk2 provider = new PactProviderRuleMk2("test_provider", "localhost", 8080, this);
 
    @Pact(consumer = "test_consumer")
    public RequestResponsePact createPact(PactDslWithProvider builder) {
    	Map<String, String> headers = new HashMap<String, String>();
        headers.put("Content-Type", "application/json");
    	
        return builder.given("test GET")
        	      .uponReceiving("GET REQUEST")
        	      .path("/pact")
        	      .method("GET")
        	      .willRespondWith()
        	      .status(200)
        	      .body("{\"condition\": true, \"name\": \"tom\"}")
        	      .toPact();
    }

    @Test
    @PactVerification()
    public void givenGet_whenSendRequest_shouldReturn200WithProperHeaderAndBody() {
    	
        // when
        ResponseEntity<String> response = new RestTemplate()
          .getForEntity(provider.getUrl() + "/pact", String.class);
     
        // then
        assertEquals(200, response.getStatusCode().value());
        Boolean val = response.getHeaders().get("Content-Type").contains("application/json");
        assertTrue(val);
        Boolean bodyVal = response.getBody().contains("condition", "true", "name", "tom");
    }
}
